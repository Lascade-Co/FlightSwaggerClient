//
// V2API.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire



public class V2API: APIBase {
    /**

     - parameter airlineId: (query) Airline IATA code 
     - parameter flightNumber: (query) Flight number 
     - parameter date: (query) Date in YYYYMMDD format 
     - parameter authorization: (header) User ID 
     - parameter departureAirport: (query) Departure airport IATA code (optional)
     - parameter arrivalAirport: (query) Arrival airport IATA code (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func v2FlightList(airlineId airlineId: String, flightNumber: String, date: String, authorization: String, departureAirport: String? = nil, arrivalAirport: String? = nil, completion: ((data: FlightInfoResponseModel?, error: ErrorType?) -> Void)) {
        v2FlightListWithRequestBuilder(airlineId: airlineId, flightNumber: flightNumber, date: date, authorization: authorization, departureAirport: departureAirport, arrivalAirport: arrivalAirport).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     - GET /v2/flight/
     - Retrieve flight details using airline id and flight number.
     - BASIC:
       - type: basic
       - name: Basic
     - examples: [{contentType=application/json, example={"empty": false}}]
     
     - parameter airlineId: (query) Airline IATA code 
     - parameter flightNumber: (query) Flight number 
     - parameter date: (query) Date in YYYYMMDD format 
     - parameter authorization: (header) User ID 
     - parameter departureAirport: (query) Departure airport IATA code (optional)
     - parameter arrivalAirport: (query) Arrival airport IATA code (optional)

     - returns: RequestBuilder<FlightInfoResponseModel> 
     */
    public class func v2FlightListWithRequestBuilder(airlineId airlineId: String, flightNumber: String, date: String, authorization: String, departureAirport: String? = nil, arrivalAirport: String? = nil) -> RequestBuilder<FlightInfoResponseModel> {
        let path = "/v2/flight/"
        let URLString = FlightSwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "airline_id": airlineId,
            "flight_number": flightNumber,
            "date": date,
            "departure_airport": departureAirport,
            "arrival_airport": arrivalAirport
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
        let nillableHeaders: [String: AnyObject?] = [
            "Authorization": authorization
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)
 
        let requestBuilder: RequestBuilder<FlightInfoResponseModel>.Type = FlightSwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false, headers: headerParameters)
    }

    /**

     - parameter authorization: (header) User ID 
     - parameter depId: (query) Departure IATA code (optional)
     - parameter arrId: (query) Arrival IATA code (optional)
     - parameter date: (query) Date in YYYYMMDD format (optional)
     - parameter airlineId: (query) Airline IATA code (optional)
     - parameter flightNumber: (query) Flight number (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func v2SchedulesList(authorization authorization: String, depId: String? = nil, arrId: String? = nil, date: String? = nil, airlineId: String? = nil, flightNumber: String? = nil, completion: ((data: ScheduleResponseModel?, error: ErrorType?) -> Void)) {
        v2SchedulesListWithRequestBuilder(authorization: authorization, depId: depId, arrId: arrId, date: date, airlineId: airlineId, flightNumber: flightNumber).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     - GET /v2/schedules/
     - Retrieve flight schedules by departure or arrival airport ID.
     - BASIC:
       - type: basic
       - name: Basic
     - examples: [{contentType=application/json, example={"empty": false}}]
     
     - parameter authorization: (header) User ID 
     - parameter depId: (query) Departure IATA code (optional)
     - parameter arrId: (query) Arrival IATA code (optional)
     - parameter date: (query) Date in YYYYMMDD format (optional)
     - parameter airlineId: (query) Airline IATA code (optional)
     - parameter flightNumber: (query) Flight number (optional)

     - returns: RequestBuilder<ScheduleResponseModel> 
     */
    public class func v2SchedulesListWithRequestBuilder(authorization authorization: String, depId: String? = nil, arrId: String? = nil, date: String? = nil, airlineId: String? = nil, flightNumber: String? = nil) -> RequestBuilder<ScheduleResponseModel> {
        let path = "/v2/schedules/"
        let URLString = FlightSwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "dep_id": depId,
            "arr_id": arrId,
            "date": date,
            "airline_id": airlineId,
            "flight_number": flightNumber
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
        let nillableHeaders: [String: AnyObject?] = [
            "Authorization": authorization
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)
 
        let requestBuilder: RequestBuilder<ScheduleResponseModel>.Type = FlightSwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false, headers: headerParameters)
    }

}
